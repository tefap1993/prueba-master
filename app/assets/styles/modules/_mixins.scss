@mixin flexbox() {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

// The 'flex' shorthand
// - applies to: flex items
// <positive-number>, initial, auto, or none
@mixin flex($values) {
  -webkit-box-flex: $values;
  -moz-box-flex: $values;
  -webkit-flex: $values;
  -ms-flex: $values;
  flex: $values;
}

// Flex Flow Direction
// - applies to: flex containers
// row | row-reverse | column | column-reverse
@mixin flex-direction($direction) {
  -webkit-flex-direction: #{$direction};
  --moz-flex-direction: #{$direction};
  -ms-flex-direction: #{$direction};
  flex-direction: #{$direction};
}

// Flex Line Wrapping
// - applies to: flex containers
// nowrap | wrap | wrap-reverse
@mixin flex-wrap($wrap) {
  -webkit-flex-wrap: $wrap;
  --moz-flex-wrap: $wrap;
  -ms-flex-wrap: $wrap;
  flex-wrap: $wrap;
}

// Flex Direction and Wrap
// - applies to: flex containers
// <flex-direction> || <flex-wrap>
@mixin flex-flow($flow) {
  -webkit-flex-flow: $flow;
  --moz-flex-flow: $flow;
  --ms-flex-flow: $flow;
  flex-flow: $flow;
}

// Display Order
// - applies to: flex items
// <integer>
@mixin order($val) {
  -webkit-box-ordinal-group: $val;
  -moz-box-ordinal-group: $val;
  -ms-flex-order: $val;
  -webkit-order: $val;
  order: $val;
}

// Flex grow factor
// - applies to: flex items
// <number>
@mixin flex-grow($grow) {
  -webkit-flex-grow: $grow;
  --moz-flex-grow: $grow;
  --ms-flex-grow: $grow;
  flex-grow: $grow;
}

// Flex shrink
// - applies to: flex item shrink factor
// <number>
@mixin flex-shrink($shrink) {
  -webkit-flex-shrink: $shrink;
  --moz-flex-shrink: $shrink;
  --ms-flex-shrink: $shrink;
  flex-shrink: $shrink;
}

// Flex basis
// - the initial main size of the flex item
// - applies to: flex itemsnitial main size of the flex item
// <width>
@mixin flex-basis($width) {
  -webkit-flex-basis: $width;
  --moz-flex-basis: $width;
  --ms-flex-basis: $width;
  flex-basis: $width;
}

// Axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center |
@mixin justify-content($justify) {
  -webkit-justify-content: #{$justify};
  --moz-justify-content: #{$justify};
  --ms-justify-content: #{$justify};
  justify-content: #{$justify};
  @if ($justify==flex-start) {
    -ms-flex-pack: start;
  }
  @else if ($justify==flex-end) {
    -ms-flex-pack: end;
  }
  @else if ($justify==center) {
    -ms-flex-pack: center;
  }
  @else if ($justify==space-between) or ($justify==space-around) {
    -ms-flex-pack: justify;
  }
  @else {
    -ms-flex-pack: $justify;
  }
}

// Packing Flex Lines
// - applies to: multi-line flex containers
// flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($align) {
  -webkit-align-content: #{$align};
  --moz-align-content: #{$align};
  --ms-align-content: #{$align};
  align-content: $align;
}

// Cross-axis Alignment
// - applies to: flex containers
// flex-start | flex-end | center | baseline | stretch
@mixin align-items($align) {
  -webkit-align-items: #{$align};
  --moz-align-items: #{$align};
  --ms-align-items: #{$align};
  align-items: $align;
}

// Cross-axis Alignment
// - applies to: flex items
// auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($align) {
  -webkit-align-self: #{$align};
  --moz-align-self: #{$align};
  --ms-align-self: #{$align};
  align-self: $align;
}

// Legibility Mixin
// integer
@mixin font-legibility($font-size,
$value: 1.618) {
  font-size: round(($font-size * $font-basis-size)); // Safe PX rounded font-size for < IE8
  font-size: $font-size + rem; // Font Size in rem
  line-height: ($font-size * $font-basis-size * $value); //Standard calculation for line-height
}

// linear gradient
// Receipts 2 or more colors and percentages for positioning
// and creates a left top to right bottom gradient
// (color %, color %, color % ...)
@mixin linearGradient($color) {
  $end: length($color);
  $first-color: nth(nth($color, 1), 1);
  $last-color: nth(nth($color, $end), 1);
  background: $first-color;
  /* Old browsers */
  background: -moz-linear-gradient(-45deg, $color);
  /* FF3.6-15 */
  background: -webkit-linear-gradient(-45deg, $color);
  /* Chrome10-25,Safari5.1-6 */
  background: linear-gradient(135deg, $color);
  /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=#{$first-color},
  endColorstr=#{$last-color},
  GradientType=1);
  /* IE6-9 fallback on horizontal gradient */
}

// transition
@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

// transform
@mixin transform($transform) {
  -webkit-transform: $transform;
  -moz-transform: $transform;
  -o-transform: $transform;
  transform: $transform;
}